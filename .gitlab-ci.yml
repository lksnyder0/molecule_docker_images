stages:
  - base
  - extended

## Release Pipelines
### Debian
debian_release:
  image: docker:latest
  stage: base
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
  script:
    - docker build --pull -t "$DH_NAMESPACE/debian:10" -f debian.Dockerfile .
    - docker tag "$DH_NAMESPACE/debian:10" "$DH_NAMESPACE/debian:buster"
    - docker tag "$DH_NAMESPACE/debian:10" "$DH_NAMESPACE/debian:latest"
    - docker build --pull -t "$DH_NAMESPACE/debian:11" -f debian.Dockerfile --build-arg TAG=bullseye .
    - docker tag "$DH_NAMESPACE/debian:11" "$DH_NAMESPACE/debian:bullseye"
  after_script:
    - docker push "$DH_NAMESPACE/debian:10"
    - docker push "$DH_NAMESPACE/debian:buster"
    - docker push "$DH_NAMESPACE/debian:latest"
    - docker push "$DH_NAMESPACE/debian:11"
    - docker push "$DH_NAMESPACE/debian:bullseye"
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - debian.Dockerfile
      when: always

debian_systemd-release:
  image: docker:latest
  stage: extended
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
  script:
    - docker build --pull -t "$DH_NAMESPACE/debian_systemd:10" -f debian_systemd.Dockerfile .
    - docker tag "$DH_NAMESPACE/debian_systemd:10" "$DH_NAMESPACE/debian_systemd:buster"
    - docker tag "$DH_NAMESPACE/debian_systemd:10" "$DH_NAMESPACE/debian_systemd:latest"
    - docker build --pull -t "$DH_NAMESPACE/debian_systemd:11" -f debian_systemd.Dockerfile --build-arg TAG=bullseye .
    - docker tag "$DH_NAMESPACE/debian_systemd:11" "$DH_NAMESPACE/debian_systemd:bullseye"
  after_script:
    - docker push "$DH_NAMESPACE/debian_systemd:10"
    - docker push "$DH_NAMESPACE/debian_systemd:buster"
    - docker push "$DH_NAMESPACE/debian_systemd:latest"
    - docker push "$DH_NAMESPACE/debian_systemd:11"
    - docker push "$DH_NAMESPACE/debian_systemd:bullseye"
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - debian.Dockerfile
        - debian_systemd.Dockerfile
      when: always

### CentOS
centos_base-release:
  image: docker:latest
  stage: base
  services:
    - docker:dind
  variables:
    baseimage: centos
    tag8: "8"
    tag7: "7"
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
  script:
    - docker build --pull -t "$DH_NAMESPACE/centos:8" --build-arg TAG=$tag8 --build-arg BASEIMAGE=$baseimage -f centos/centos.Dockerfile centos
    - docker tag "$DH_NAMESPACE/centos:8" "$DH_NAMESPACE/centos:latest"
    - docker build --pull -t "$DH_NAMESPACE/centos:7" --build-arg TAG=$tag7 --build-arg BASEIMAGE=$baseimage -f centos/centos.Dockerfile centos
  after_script:
    - docker push "$DH_NAMESPACE/centos:8"
    - docker push "$DH_NAMESPACE/centos:latest"
    - docker push "$DH_NAMESPACE/centos:7"
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - centos/centos.Dockerfile
      when: always

centos_systemd-release:
  image: docker:latest
  stage: extended
  services:
    - docker:dind
  variables:
    baseimage: lksnyder0/centos
    tag8: "8"
    tag7: "7"
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
  script:
    - docker build --pull -t "$DH_NAMESPACE/centos_systemd:8" --build-arg TAG=$tag8 --build-arg BASEIMAGE=$baseimage -f centos/centos_systemd.Dockerfile centos
    - docker tag "$DH_NAMESPACE/centos_systemd:8" "$DH_NAMESPACE/centos_systemd:latest"
    - docker build --pull -t "$DH_NAMESPACE/centos_systemd:7" --build-arg TAG=$tag7 --build-arg BASEIMAGE=$baseimage -f centos/centos_systemd.Dockerfile centos
  after_script:
    - docker push "$DH_NAMESPACE/centos_systemd:8"
    - docker push "$DH_NAMESPACE/centos_systemd:latest"
    - docker push "$DH_NAMESPACE/centos_systemd:7"
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - centos/centos_systemd.Dockerfile
      when: always


## Test/Dev Pipelines
### Debian
debian_base-test:
  image: docker:latest
  stage: base
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo $CI_COMMIT_BRANCH
    - docker build --pull -t "$CI_REGISTRY_IMAGE/debian:10_dev_$GITLAB_USER_LOGIN" -f debian.Dockerfile .
    - docker tag "$CI_REGISTRY_IMAGE/debian:10_dev_$GITLAB_USER_LOGIN" "$CI_REGISTRY_IMAGE/debian:buster_dev_$GITLAB_USER_LOGIN"
    - docker tag "$CI_REGISTRY_IMAGE/debian:10_dev_$GITLAB_USER_LOGIN" "$CI_REGISTRY_IMAGE/debian:latest_dev_$GITLAB_USER_LOGIN"
    - docker build --pull -t "$CI_REGISTRY_IMAGE/debian:11_dev_$GITLAB_USER_LOGIN" -f debian.Dockerfile --build-arg TAG=bullseye .
    - docker tag "$CI_REGISTRY_IMAGE/debian:11_dev_$GITLAB_USER_LOGIN" "$CI_REGISTRY_IMAGE/debian:bullseye_dev_$GITLAB_USER_LOGIN"
  after_script:
    - docker push "$CI_REGISTRY_IMAGE/debian:10_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/debian:buster_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/debian:latest_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/debian:11_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/debian:bullseye_dev_$GITLAB_USER_LOGIN"
  rules:
    - if: $CI_COMMIT_BRANCH != 'master'
      changes:
        - debian.Dockerfile
      when: always

debian_systemd-test:
  image: docker:latest
  stage: extended
  services:
    - docker:dind
  variables:
    baseimage: "registry.gitlab.com/lksnyder0/molecule_docker_images/debian"
    tag10: "10_dev_$GITLAB_USER_LOGIN"
    tag11: "11_dev_$GITLAB_USER_LOGIN"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/debian_systemd:10_dev_$GITLAB_USER_LOGIN" --build-arg TAG=$tag10 --build-arg BASEIMAGE=$baseimage -f debian_systemd.Dockerfile .
    - docker tag "$CI_REGISTRY_IMAGE/debian_systemd:10_dev_$GITLAB_USER_LOGIN" "$CI_REGISTRY_IMAGE/debian_systemd:buster_dev_$GITLAB_USER_LOGIN"
    - docker tag "$CI_REGISTRY_IMAGE/debian_systemd:10_dev_$GITLAB_USER_LOGIN" "$CI_REGISTRY_IMAGE/debian_systemd:latest_dev_$GITLAB_USER_LOGIN"
    - docker build --pull -t "$CI_REGISTRY_IMAGE/debian_systemd:11_dev_$GITLAB_USER_LOGIN" --build-arg TAG=$tag11 --build-arg BASEIMAGE=$baseimage -f debian_systemd.Dockerfile .
    - docker tag "$CI_REGISTRY_IMAGE/debian_systemd:11_dev_$GITLAB_USER_LOGIN" "$CI_REGISTRY_IMAGE/debian_systemd:bullseye_dev_$GITLAB_USER_LOGIN"
  after_script:
    - docker push "$CI_REGISTRY_IMAGE/debian_systemd:10_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/debian_systemd:buster_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/debian_systemd:latest_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/debian_systemd:11_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/debian_systemd:bullseye_dev_$GITLAB_USER_LOGIN"
  rules:
    - if: $CI_COMMIT_BRANCH != 'master'
      changes:
        - debian.Dockerfile
        - debian_systemd.Dockerfile
      when: always

### CentOS
centos_base-test:
  image: docker:latest
  stage: base
  services:
    - docker:dind
  variables:
    baseimage: centos
    tag8: "8"
    tag7: "7"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --compress --pull -t "$CI_REGISTRY_IMAGE/centos:8_dev_$GITLAB_USER_LOGIN" --build-arg TAG=$tag8 --build-arg BASEIMAGE=$baseimage -f centos/centos.Dockerfile centos
    - docker tag "$CI_REGISTRY_IMAGE/centos:8_dev_$GITLAB_USER_LOGIN" "$CI_REGISTRY_IMAGE/centos:latest_$GITLAB_USER_LOGIN"
    - docker build --compress --pull -t "$CI_REGISTRY_IMAGE/centos:7_dev_$GITLAB_USER_LOGIN" --build-arg TAG=$tag7 --build-arg BASEIMAGE=$baseimage -f centos/centos.Dockerfile centos
  after_script:
    - docker push "$CI_REGISTRY_IMAGE/centos:8_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/centos:latest_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/centos:7_dev_$GITLAB_USER_LOGIN"
  rules:
    - if: $CI_COMMIT_BRANCH != 'master'
      changes:
        - centos/centos.Dockerfile
      when: always

centos_systemd-test:
  image: docker:latest
  stage: extended
  services:
    - docker:dind
  variables:
    baseimage: registry.gitlab.com/lksnyder0/molecule_docker_images/centos
    tag8: 8_dev_lksnyder0
    tag7: 7_dev_lksnyder0
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --compress --pull -t "$CI_REGISTRY_IMAGE/centos_systemd:8_dev_$GITLAB_USER_LOGIN" --build-arg TAG=$tag8 --build-arg BASEIMAGE=$baseimage -f centos/centos_systemd.Dockerfile centos
    - docker tag "$CI_REGISTRY_IMAGE/centos_systemd:8_dev_$GITLAB_USER_LOGIN" "$CI_REGISTRY_IMAGE/centos_systemd:latest_$GITLAB_USER_LOGIN"
    - docker build --compress --pull -t "$CI_REGISTRY_IMAGE/centos_systemd:7_dev_$GITLAB_USER_LOGIN" --build-arg TAG=$tag7 --build-arg BASEIMAGE=$baseimage -f centos/centos_systemd.Dockerfile centos
  after_script:
    - docker push "$CI_REGISTRY_IMAGE/centos_systemd:8_dev_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/centos_systemd:latest_$GITLAB_USER_LOGIN"
    - docker push "$CI_REGISTRY_IMAGE/centos_systemd:7_dev_$GITLAB_USER_LOGIN"
  rules:
    - if: $CI_COMMIT_BRANCH != 'master'
      changes:
        - centos/centos_systemd.Dockerfile
      when: always

